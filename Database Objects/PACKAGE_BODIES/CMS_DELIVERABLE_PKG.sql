--------------------------------------------------------
--  DDL for Package Body CMS_DELIVERABLE_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS_ADMIN"."CMS_DELIVERABLE_PKG" AS


  PROCEDURE PROC_INS_DELIVERABLE
(
  PI_REQUIREMENT_ID IN CMS_DELIVERABLE.REQUIREMENT_ID%TYPE,
  PI_TYPE_ID IN CMS_DELIVERABLE.TYPE_ID%TYPE,
  PI_DUE_DATE IN CMS_DELIVERABLE.DUE_DATE%TYPE,
  PI_DIRECTORATE_ID IN CMS_DELIVERABLE.DIRECTORATE_ID%TYPE,
  PI_DEPARTMENT_ID IN CMS_DELIVERABLE.DEPARTMENT_ID%TYPE,
  PI_UPLOAD_FILE_REQUIRED IN CMS_DELIVERABLE.UPLOAD_FILE_REQUIRED%TYPE,
  PI_DESCRIPTION IN CMS_DELIVERABLE.DESCRIPTION%TYPE,
  PI_IS_INFORMATION_ONLY IN CMS_DELIVERABLE.IS_INFORMATION_ONLY%TYPE,
  PI_NOTIFY_MANAGER IN CMS_DELIVERABLE.NOTIFY_MANAGER%TYPE,
  PI_FREQUENCY_ID IN CMS_DELIVERABLE.FREQUENCY_ID%TYPE,
  PI_CREATED_BY IN CMS_DELIVERABLE.CREATED_BY%TYPE,
  PO_DELIVERABLE_ID OUT NUMBER
) AS
L_SEQUENCE_NO NUMBER;
L_MAXSEQ_NO NUMBER;
L_COMPOSITE_KEY VARCHAR2(25);
L_TYPE_SHORTNAME VARCHAR2(6);
L_DELIVERABLE_ID NUMBER;
L_REQUIREMENT_ID NUMBER;
L_DUE_DATE DATE;
L_SEQ_COMPOSITE VARCHAR2(5);
L_COUNTDEL NUMBER;
L_EMAIL_RETURN_CODE NUMBER;

  BEGIN

      /* set the sequence number of the deliverable */
      SELECT COUNT(*) INTO L_COUNTDEL FROM CMS_DELIVERABLE;

      IF L_COUNTDEL = 0 THEN
        L_MAXSEQ_NO := 0;
      ELSE
        SELECT MAX(SEQUENCE_NO) INTO L_MAXSEQ_NO FROM CMS_DELIVERABLE;
      END IF;

      IF ((L_MAXSEQ_NO = NULL) OR (L_MAXSEQ_NO = 0)) THEN
        L_SEQUENCE_NO := 1;
      ELSE
        L_SEQUENCE_NO := L_MAXSEQ_NO + 1;
      END IF;

      /*set the compositekey based on typeid and requirementid as these cannot be changed on edit*/
      SELECT SHORT_NAME INTO L_TYPE_SHORTNAME FROM CMS_CONTRACT_OTHERTYPES WHERE CONTRACT_ID = PI_TYPE_ID;

       L_COMPOSITE_KEY := L_TYPE_SHORTNAME || '_' ;

      IF (PI_REQUIREMENT_ID = 0 AND PI_TYPE_ID = 4) THEN  --Data Call
          L_COMPOSITE_KEY :=  L_COMPOSITE_KEY || '100';
          L_REQUIREMENT_ID := Null;
      ELSIF (PI_REQUIREMENT_ID = 0 AND PI_TYPE_ID = 5) THEN --SSO Request
          L_COMPOSITE_KEY :=  L_COMPOSITE_KEY || '200';
          L_REQUIREMENT_ID := NULL;
      ELSIF (PI_REQUIREMENT_ID = 0) THEN --All other generic Types
          L_COMPOSITE_KEY :=  L_COMPOSITE_KEY || '300';
          L_REQUIREMENT_ID := NULL;
      ELSE
         L_COMPOSITE_KEY :=  L_COMPOSITE_KEY || PI_REQUIREMENT_ID;
         L_REQUIREMENT_ID := PI_REQUIREMENT_ID;
      END IF;

      SELECT TRIM(TO_CHAR(L_SEQUENCE_NO,'0000')) INTO L_SEQ_COMPOSITE FROM DUAL;

       L_COMPOSITE_KEY := L_COMPOSITE_KEY || '_' || L_SEQ_COMPOSITE;
       IF (TO_CHAR(pi_DUE_DATE,'dd-mon-yy') = '01-jan-01') THEN
        l_DUE_DATE := NULL;
       ELSE
        L_DUE_DATE :=PI_DUE_DATE;
       END IF;

      INSERT INTO CMS_DELIVERABLE(
          REQUIREMENT_ID,
          SEQUENCE_NO,
          COMPOSITE_KEY,
          TYPE_ID,
          DUE_DATE,
          DIRECTORATE_ID,
          DEPARTMENT_ID,
          STATUS_ID,
          UPLOAD_FILE_REQUIRED,
          DESCRIPTION,
          IS_INFORMATION_ONLY,
          NOTIFY_MANAGER,
          FREQUENCY_ID,
          CREATED_BY,
          CREATED_ON
      )
      VALUES
      (
        L_REQUIREMENT_ID,
        L_SEQUENCE_NO,
        L_COMPOSITE_KEY,
        PI_TYPE_ID,
        L_DUE_DATE,
        PI_DIRECTORATE_ID,
        PI_DEPARTMENT_ID,
        1,                --Initially, the status is New
        PI_UPLOAD_FILE_REQUIRED,
        PI_DESCRIPTION,
        PI_IS_INFORMATION_ONLY,
        PI_NOTIFY_MANAGER,
        PI_FREQUENCY_ID,
        PI_CREATED_BY,
        SYSDATE
        )
      RETURNING DELIVERABLE_ID INTO L_DELIVERABLE_ID;

      PO_DELIVERABLE_ID:=L_DELIVERABLE_ID;

  END PROC_INS_DELIVERABLE;

  PROCEDURE PROC_UPD_DELIVERABLE
(
  PI_DELIVERABLE_ID IN CMS_DELIVERABLE.DELIVERABLE_ID%TYPE,
  PI_DUE_DATE IN CMS_DELIVERABLE.DUE_DATE%TYPE,
  PI_DIRECTORATE_ID IN CMS_DELIVERABLE.DIRECTORATE_ID%TYPE,
  PI_DEPARTMENT_ID IN CMS_DELIVERABLE.DEPARTMENT_ID%TYPE,
  /*PI_STATUS_ID IN CMS_DELIVERABLE.STATUS_ID%TYPE,*/
  PI_UPLOAD_FILE_REQUIRED IN CMS_DELIVERABLE.UPLOAD_FILE_REQUIRED%TYPE,
  PI_DESCRIPTION IN CMS_DELIVERABLE.DESCRIPTION%TYPE,
  PI_IS_INFORMATION_ONLY IN CMS_DELIVERABLE.IS_INFORMATION_ONLY%TYPE,
  PI_NOTIFY_MANAGER IN CMS_DELIVERABLE.NOTIFY_MANAGER%TYPE,
  PI_FREQUENCY_ID IN CMS_DELIVERABLE.FREQUENCY_ID%TYPE,
  PI_MODIFIED_BY IN CMS_DELIVERABLE.MODIFIED_BY%TYPE,
  PI_SEND_EMAIL IN VARCHAR2,
  PO_RETURN_CODE OUT NUMBER
) AS
L_EMAIL_RETURN_CODE NUMBER;
  BEGIN
      UPDATE CMS_DELIVERABLE SET
        DUE_DATE = PI_DUE_DATE,
        DIRECTORATE_ID = PI_DIRECTORATE_ID,
        DEPARTMENT_ID = PI_DEPARTMENT_ID,
        /*STATUS_ID = PI_STATUS_ID,*/
        UPLOAD_FILE_REQUIRED = PI_UPLOAD_FILE_REQUIRED,
        DESCRIPTION = PI_DESCRIPTION,
        IS_INFORMATION_ONLY = PI_IS_INFORMATION_ONLY,
        NOTIFY_MANAGER = PI_NOTIFY_MANAGER,
        FREQUENCY_ID = PI_FREQUENCY_ID,
        MODIFIED_BY = PI_MODIFIED_BY,
        MODIFIED_DATE = SYSDATE
        WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID;
    /*  IF (PI_SEND_EMAIL = 'Y') THEN
        CMS_EMAIL_NOTIFICATION_PKG.CMS_EMAIL_PROC(PI_DELIVERABLE_ID,9,'',L_EMAIL_RETURN_CODE);
      END IF;*/

           PO_RETURN_CODE := 0;
  EXCEPTION
        WHEN OTHERS THEN
          PO_RETURN_CODE := SQLCODE;
  END PROC_UPD_DELIVERABLE;

  PROCEDURE PROC_DEL_DELIVERABLE
(
  PI_DELIVERABLE_ID IN CMS_DELIVERABLE.DELIVERABLE_ID%TYPE,
  PI_MODIFIED_BY IN CMS_DELIVERABLE.MODIFIED_BY%TYPE,
  PO_RETURN_CODE OUT NUMBER
) AS
  BEGIN

      UPDATE CMS_DELIVERABLE SET IS_ACTIVE = 'N' ,MODIFIED_BY = PI_MODIFIED_BY, MODIFIED_DATE = SYSDATE WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID;
      UPDATE CMS_ATTACHMENT SET IS_ACTIVE ='N', CHANGED_BY = PI_MODIFIED_BY, CHANGED_ON = SYSDATE WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID AND IS_ACTIVE ='Y';
      UPDATE CMS_DELI_NOTIFY_MAP SET IS_ACTIVE='N',MODIFIED_BY=PI_MODIFIED_BY,MODIFIED_DATE=SYSDATE WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID AND IS_ACTIVE ='Y';
      UPDATE CMS_DELI_APPROVER_MAP SET IS_ACTIVE='N',MODIFIED_BY= PI_MODIFIED_BY, MODIFIED_DATE = SYSDATE WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID AND IS_ACTIVE ='Y';
      UPDATE CMS_SOWN_DELI_MAP SET IS_ACTIVE ='N',MODIFIED_BY=PI_MODIFIED_BY,MODIFIED_DATE=SYSDATE WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID AND IS_ACTIVE ='Y';
      PO_RETURN_CODE := 0;
  EXCEPTION
      WHEN OTHERS THEN
        PO_RETURN_CODE := SQLCODE;
  END PROC_DEL_DELIVERABLE;

  PROCEDURE PROC_UPD_STATUS
(
  PI_DELIVERABLE_ID IN CMS_DELIVERABLE.DELIVERABLE_ID%TYPE,
  PI_STATUS_ID IN CMS_DELIVERABLE.STATUS_ID%TYPE,
  PI_REASON_FOR_REJECTION IN CMS_DELIVERABLE.REASON_FOR_REJECTION%TYPE,
  Pi_Modified_By In Cms_Deliverable.Modified_By%Type,
  PI_SENDEMAIL IN VARCHAR2, 
  PO_RETURN_CODE OUT NUMBER
) AS
L_DATE_SUBMITTED DATE;
L_DATE_APPROVED DATE;
L_DAYS NUMBER;
L_DUE_DATE DATE;
L_RETURN_CODE NUMBER;
L_RETURN_CODE_10 NUMBER;
L_RETURN_CODE_1 NUMBER;
L_EMAIL_ID NUMBER;
L_EMAIL_RETURN_CODE NUMBER;

  BEGIN
    --submitted, approved,reopened
   IF (PI_STATUS_ID <> 5) THEN
      UPDATE CMS_DELIVERABLE SET STATUS_ID=PI_STATUS_ID,MODIFIED_BY = PI_MODIFIED_BY,MODIFIED_DATE=SYSDATE WHERE DELIVERABLE_ID=PI_DELIVERABLE_ID;
   ELSE

    /* if reopened, check the original due date
   if due date is 30 days or more away from the rejected date, keep the original
   if due date is less than 30 days, then set it to rejected date + 30 days
   notification should also be set to default 10 and 1 days */
       BEGIN
       /* SELECT TRUNC(DUE_DATE) - TRUNC(SYSDATE), DUE_DATE INTO L_DAYS , L_DUE_DATE FROM CMS_DELIVERABLE WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID;
            IF L_DAYS < 30 THEN
                  L_DUE_DATE := SYSDATE + 30;
            END IF;*/
           UPDATE CMS_DELIVERABLE SET STATUS_ID=PI_STATUS_ID,REASON_FOR_REJECTION = PI_REASON_FOR_REJECTION, MODIFIED_BY = PI_MODIFIED_BY,MODIFIED_DATE=SYSDATE WHERE DELIVERABLE_ID=PI_DELIVERABLE_ID;
            PROC_DEL_NOTIFICATION_SCHEDULE(PI_DELIVERABLE_ID,'APPS_ADMIN',L_RETURN_CODE);
            IF L_RETURN_CODE = 0 THEN
                PROC_INS_NOTIFICATION_SCHEDULE(PI_DELIVERABLE_ID,11,NULL,L_RETURN_CODE_10);
                PROC_INS_NOTIFICATION_SCHEDULE(PI_DELIVERABLE_ID,12,NULL,L_RETURN_CODE_1);
            END IF;
      END;

  END IF;
  /* Email notification when status is submitted - information only, submitted-approval required, approved, re-opened*/
      IF PI_STATUS_ID = 6 THEN
          L_EMAIL_ID := 4;
      ELSIF PI_STATUS_ID = 3 THEN
          L_EMAIL_ID:=5;
      ELSIF PI_STATUS_ID=4 THEN
          L_EMAIL_ID := 6;
      ELSIF PI_STATUS_ID=5 THEN
          L_EMAIL_ID := 7;
      END IF;
      --DBMS_OUTPUT.PUT_LINE(PI_STATUS_ID || ':' || L_EMAIL_ID);
      IF PI_SENDEMAIL = 'Y' THEN
         IF L_EMAIL_ID IS NOT NULL THEN
           CMS_EMAIL_NOTIFICATION_PKG.CMS_EMAIL_PROC(PI_DELIVERABLE_ID,L_EMAIL_ID,0, L_EMAIL_RETURN_CODE);
         End If;
       END IF;
     -- DBMS_OUTPUT.PUT_LINE('emailerr' || ' ' || L_EMAIL_RETURN_CODE);
   PO_RETURN_CODE := 0;
  EXCEPTION
    WHEN OTHERS THEN
      PO_RETURN_CODE := SQLCODE;
  END PROC_UPD_STATUS;

  PROCEDURE PROC_INS_SUBOWNERS
(
  PI_DELIVERABLE_ID IN CMS_SOWN_DELI_MAP.DELIVERABLE_ID%TYPE,
  PI_SLAC_ID IN CMS_SOWN_DELI_MAP.SLAC_ID%TYPE,
  PI_ISOWNER IN CMS_SOWN_DELI_MAP.ISOWNER%TYPE,
  PI_CREATED_BY IN CMS_SOWN_DELI_MAP.CREATED_BY%TYPE,
  PO_RETURN_CODE OUT NUMBER
) AS
  L_SO_ID NUMBER;
  L_SO_RETURN_CODE NUMBER;
  BEGIN
      INSERT INTO CMS_SOWN_DELI_MAP(DELIVERABLE_ID,SLAC_ID,CREATED_BY,CREATED_ON,ISOWNER)
        VALUES (PI_DELIVERABLE_ID,PI_SLAC_ID,PI_CREATED_BY,SYSDATE,PI_ISOWNER)
        RETURNING SUBOWNER_ID INTO L_SO_ID;
       PO_RETURN_CODE := 0;

  EXCEPTION
      WHEN OTHERS THEN
        PO_RETURN_CODE := SQLCODE;
  END PROC_INS_SUBOWNERS;

  PROCEDURE PROC_DEL_SUBOWNERS
(
  PI_DELIVERABLE_ID IN CMS_SOWN_DELI_MAP.DELIVERABLE_ID%TYPE,
  PI_ISOWNER IN CMS_SOWN_DELI_MAP.ISOWNER%TYPE,
  PI_MODIFIED_BY IN CMS_SOWN_DELI_MAP.MODIFIED_BY%TYPE,
  PO_RETURN_CODE OUT NUMBER
) AS
L_COUNT NUMBER;
  BEGIN
  IF ((PI_ISOWNER = '') or (PI_ISOWNER IS NULL)) THEN
    SELECT COUNT(*) INTO L_COUNT FROM CMS_SOWN_DELI_MAP WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID AND IS_ACTIVE='Y';
   ELSE
     SELECT COUNT(*) INTO L_COUNT FROM CMS_SOWN_DELI_MAP WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID AND IS_ACTIVE='Y' AND ISOWNER = PI_ISOWNER;
   END IF;
    IF L_COUNT > 0 THEN
    IF ((PI_ISOWNER = '') OR (PI_ISOWNER IS NULL)) THEN
      UPDATE CMS_SOWN_DELI_MAP SET IS_ACTIVE ='N',MODIFIED_BY=PI_MODIFIED_BY, MODIFIED_DATE=SYSDATE WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID AND IS_ACTIVE='Y';
    ELSE
      UPDATE CMS_SOWN_DELI_MAP SET IS_ACTIVE ='N',MODIFIED_BY=PI_MODIFIED_BY, MODIFIED_DATE=SYSDATE WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID AND ISOWNER = PI_ISOWNER AND IS_ACTIVE='Y' ;
    END IF;
    END IF;
    PO_RETURN_CODE := 0;
  EXCEPTION
    WHEN OTHERS THEN
        PO_RETURN_CODE := SQLCODE;
  END PROC_DEL_SUBOWNERS;

  PROCEDURE PROC_INS_NOTIFICATION_SCHEDULE
(
  PI_DELIVERABLE_ID IN CMS_DELI_NOTIFY_MAP.DELIVERABLE_ID%TYPE,
  PI_LOOKUP_ID IN CMS_DELI_NOTIFY_MAP.LOOKUP_ID%TYPE,
  PI_CREATED_BY IN CMS_DELI_NOTIFY_MAP.CREATED_BY%TYPE,
  PO_RETURN_CODE OUT NUMBER
) AS
  BEGIN
    INSERT INTO CMS_DELI_NOTIFY_MAP(DELIVERABLE_ID, LOOKUP_ID,CREATED_BY,CREATED_ON)
        VALUES (PI_DELIVERABLE_ID,PI_LOOKUP_ID,PI_CREATED_BY,SYSDATE);
     PO_RETURN_CODE := 0;
  EXCEPTION
    WHEN OTHERS THEN
      PO_RETURN_CODE := SQLCODE;
  END PROC_INS_NOTIFICATION_SCHEDULE;

  PROCEDURE PROC_DEL_NOTIFICATION_SCHEDULE
(
  PI_DELIVERABLE_ID IN CMS_DELI_NOTIFY_MAP.DELIVERABLE_ID%TYPE,
  PI_MODIFIED_BY IN CMS_DELI_NOTIFY_MAP.MODIFIED_BY%TYPE,
  PO_RETURN_CODE OUT NUMBER
) AS
L_COUNT NUMBER;

  BEGIN
      SELECT COUNT(*) INTO L_COUNT FROM CMS_DELI_NOTIFY_MAP WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID AND IS_ACTIVE ='Y';

      IF L_COUNT > 0 THEN
          UPDATE CMS_DELI_NOTIFY_MAP SET IS_ACTIVE = 'N',MODIFIED_BY=PI_MODIFIED_BY,MODIFIED_DATE=SYSDATE WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID;
      END IF;

      PO_RETURN_CODE := 0;
  EXCEPTION
      WHEN OTHERS THEN
        PO_RETURN_CODE := SQLCODE;
  END PROC_DEL_NOTIFICATION_SCHEDULE;

  PROCEDURE PROC_INS_APPROVER
(
  PI_DELIVERABLE_ID IN CMS_DELI_APPROVER_MAP.DELIVERABLE_ID%TYPE,
  PI_APPROVER_ID IN CMS_DELI_APPROVER_MAP.APPROVER_ID%TYPE,
  PI_CREATED_BY IN CMS_DELI_APPROVER_MAP.CREATED_BY%TYPE,
  PO_RETURN_CODE OUT NUMBER
) AS
  BEGIN
    INSERT INTO CMS_DELI_APPROVER_MAP (DELIVERABLE_ID,APPROVER_ID,CREATED_BY,CREATED_ON)
        VALUES (PI_DELIVERABLE_ID,PI_APPROVER_ID,PI_CREATED_BY,SYSDATE);
        PO_RETURN_CODE := 0;
  EXCEPTION
        WHEN OTHERS THEN
          PO_RETURN_CODE := SQLCODE;
  END PROC_INS_APPROVER;

  PROCEDURE PROC_DEL_APPROVER
(
  PI_DELIVERABLE_ID IN CMS_DELI_APPROVER_MAP.DELIVERABLE_ID%TYPE,
  PI_MODIFIED_BY IN CMS_DELI_APPROVER_MAP.MODIFIED_BY%TYPE,
  PO_RETURN_CODE OUT NUMBER
) AS
L_COUNT NUMBER;
  BEGIN
    SELECT COUNT(*) INTO L_COUNT FROM CMS_DELI_APPROVER_MAP WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID AND IS_ACTIVE = 'Y';

    IF L_COUNT > 0 THEN
      UPDATE CMS_DELI_APPROVER_MAP SET IS_ACTIVE = 'N',MODIFIED_BY = PI_MODIFIED_BY,MODIFIED_DATE=SYSDATE WHERE DELIVERABLE_ID = PI_DELIVERABLE_ID;
    END IF;
    PO_RETURN_CODE := 0;

  EXCEPTION
    WHEN OTHERS THEN
      PO_RETURN_CODE := SQLCODE;
  END PROC_DEL_APPROVER;

  PROCEDURE PROC_INS_SSOLOG
(
  PI_DESCRIPTION IN CMS_SSO_LOG.DESCRIPTION%TYPE,
  PI_DELIVERABLE_ID IN CMS_SSO_LOG.DELIVERABLE_ID%TYPE,
  PI_SLAC_ID IN CMS_SSO_LOG.SLAC_ID%TYPE,
  PI_CREATED_BY IN CMS_SSO_LOG.CREATED_BY%TYPE,
  PO_RETURN_CODE OUT NUMBER

) AS
  BEGIN
      INSERT INTO CMS_SSO_LOG(DESCRIPTION,DELIVERABLE_ID,SLAC_ID,CREATED_BY,CREATED_ON)
        VALUES(PI_DESCRIPTION,PI_DELIVERABLE_ID,PI_SLAC_ID,PI_CREATED_BY,SYSDATE);
        PO_RETURN_CODE := 0;

  EXCEPTION
      WHEN OTHERS THEN
        PO_RETURN_CODE := SQLCODE;
  END PROC_INS_SSOLOG;

  PROCEDURE PROC_INS_SOFILEACTION
(
  PI_DELIVERABLE_ID IN CMS_FILE_SO_ACTION.DELIVERABLE_ID%TYPE,
  PI_ACTION_BY IN CMS_FILE_SO_ACTION.ACTION_BY%TYPE,
  PI_EMAIL_SENT IN CMS_FILE_SO_ACTION.EMAIL_SENT%TYPE,
  PI_DONE_UPLOAD IN CMS_FILE_SO_ACTION.DONE_UPLOAD%TYPE,
  PO_RETURN_CODE OUT NUMBER
) AS
  BEGIN
      INSERT INTO CMS_FILE_SO_ACTION(DELIVERABLE_ID,DATE_ACTION,ACTION_BY,EMAIL_SENT,DONE_UPLOAD)
      VALUES(PI_DELIVERABLE_ID,SYSDATE,PI_ACTION_BY,PI_EMAIL_SENT,PI_DONE_UPLOAD);
      PO_RETURN_CODE := 0;
  EXCEPTION
    WHEN OTHERS THEN
      PO_RETURN_CODE := SQLCODE;

  END;

END CMS_DELIVERABLE_PKG;

/
